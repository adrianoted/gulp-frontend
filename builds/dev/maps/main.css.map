{"version":3,"sources":["utils/_variables.scss","utils/_functions.scss","utils/_mixins.scss","base/_reset.scss","base/_general.scss","base/_common.scss","layout/_ui-elements.scss","layout/_grid.scss","layout/_nav.scss","layout/_sidebar.scss","layout/_content.scss","layout/_footer.scss","modules/_box.scss","modules/_form.scss","modules/_table.scss","modules/_accordion.scss","modules/_modal.scss"],"names":[],"mappings":"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","file":"../sass/main.css","sourcesContent":["/*======  VARIABLES (DELETE COMMENT)======*/\r\n$a-tags: 'a, a:active, a:hover, a:visited';\r\n\r\n//=======  Maps (SAMPLES) ========\r\n$colors: (\r\n    gen:(\r\n        bg:(rgba(26, 35, 47, 1)),\r\n        bgModal:(rgb(86, 110, 110)),\r\n        bgModalFooter:(rgb(35, 44, 44)),\r\n        clr:(#ededed),\r\n    ),\r\n    nav:(\r\n        bg:(rgba(241, 201, 113, 1)),\r\n        clr:(#ededed)\r\n    ),\r\n    sidebar:(\r\n        bg:(rgba(26, 35, 47, 1)),\r\n        clr:(rgba(53, 71, 152, 1))\r\n    ),\r\n    btn:(\r\n        bg:(rgb(28, 224, 28))\r\n    ),\r\n    grayscale:(\r\n        first: (#666666), \r\n        second: (#999999), \r\n        third: (#ededed)\r\n    ) \r\n);\r\n$fontFamily: (\r\n    first: (\"Titillium Web\", sans-serif), \r\n    second: (\"Fira sans\", sans-serif), \r\n    third: (Merriweather, sans-serif), \r\n    fourth: (\"Pathway Gothic One\", sans-serif), \r\n    fifth: (\"Yanone Kaffeesatz\", sans-serif)\r\n);","/*======  FUNCTIONS  (DELETE COMMENT)======*/\r\n\r\n//========  Map General - Returns specific variable in array\r\n@function mapGen($array, $key) {\r\n    @return map-get($array, $key);\r\n}\r\n\r\n//OUTPUT \"mapGen($fontFamily,first)\"\r\n// Map Subsets - Return subsets variables within array \r\n@function mapSub($array, $key, $variant:null) {\r\n    @if ($variant !=null) {\r\n        @return map-get(map-get($array, $key), $variant);\r\n    }\r\n    @else {\r\n        @return mapGen;\r\n    }\r\n}\r\n\r\n// *+++++ ESEMPIO  Data Map con @each\r\n$sampleMap: ( facebook: #3b5998, google: #dd4b39, twitter: #00aced, pinterest: #cb2027);\r\n@each $key,\r\n$value in $sampleMap {\r\n    .class-name-#{$key}:hover {\r\n        background-color: $value;\r\n    }\r\n}","/*======  MIXINS  (DELETE COMMENT)======*/\r\n\r\n//Select The First nth Elements\r\n@mixin firstNthEls($num) {\r\n    @if $num==1 {\r\n        &:first-child {\r\n            @content;\r\n        }\r\n    }\r\n    @else {\r\n        &:nth-child(-n + #{$num}) {\r\n            @content;\r\n        }\r\n    }\r\n}\r\n\r\n// ==== Grid System\r\n@mixin col($width) {\r\n    @extend %block;\r\n    width: $width;\r\n}\r\n\r\n@mixin squareSize ($value) {\r\n    width: $value;\r\n    height: $value;\r\n}\r\n\r\n@mixin aspectRatio($width, $val1, $val2) {\r\n    width: $width;\r\n    height: ($val2 / $val1) * $width;\r\n}\r\n\r\n@mixin aspectRatioRWD($maxWidth, $val1, $val2) {\r\n    max-width: $maxWidth;\r\n    width: 100%;\r\n    height: ($val2 / $val1) * $maxWidth;\r\n}\r\n//OUTPUT @include aspectRatioRWD(400px, 4,3);\r\n\r\n\r\n@mixin boxSize ($maxWidth, $height:auto) {\r\n    max-width: $maxWidth;\r\n    width: 100%;\r\n    height: $height;\r\n}\r\n\r\n//Align Center Element (X, Y)\r\n@mixin translateCtr($position) {\r\n    @if $position=='vertical' {\r\n        top: 50%;\r\n        -webkit-transform: translateY(-50%);\r\n        -ms-transform: translateY(-50%);\r\n        transform: translateY(-50%);\r\n    }\r\n    @else if $position=='horizontal' {\r\n        left: 50%;\r\n        -webkit-transform: translateX(-50%);\r\n        -ms-transform: translateX(-50%);\r\n        transform: translate(-50%);\r\n    }\r\n    @else if $position=='both' {\r\n        top: 50%;\r\n        left: 50%;\r\n        -webkit-transform: translate(-50%, -50%);\r\n        -ms-transform: translate(-50%, -50%);\r\n        transform: translate(-50%, -50%);\r\n    }\r\n}\r\n\r\n@mixin positioning($positioning, $args) {\r\n    position: $positioning;\r\n    $offsets: top right bottom left;\r\n    @each $o in $offsets {\r\n        $i: index($args, $o);\r\n        @if $i and $i+1 <=length($args) and type-of(nth($args, $i + 1))==number {\r\n            #{$o}: nth($args, $i + 1);\r\n        }\r\n    }\r\n}\r\n\r\n// ========= To set value of PROPERTIES with EDGES ===== \r\n@mixin propVal($props, $edge, $value) {\r\n    @if ($edge) {\r\n        #{$props}-#{$edge}: $value;\r\n    }\r\n    @else {\r\n        #{$props}: $value;\r\n    }\r\n}\r\n\r\n//OUTPUT @include propVal(margin, null, 10px);\r\n// ========= Basic fontstyle with map of fonts variables ===== \r\n@mixin fontStyle($array:null, $arrayKey:null, $size:null, $weight:null) {\r\n    font-family: mapGen($array, $arrayKey);\r\n    font-size: $size;\r\n    font-weight: $weight;\r\n}\r\n\r\n//OUTPUT @include fontStyle($fontFamily, fourth, 18pt, 700);\r\n//INCLUDE FONTS (FONT-FACE)\r\n@mixin font-face($fontPath, $fileName, $fontName) {\r\n    $filepath: $fontPath + $fileName;\r\n    @font-face {\r\n        font-family: \"#{$fontName}\";\r\n        src: url($filepath + \".eot\");\r\n        src: url($filepath + \".eot?#iefix\") format('embedded-opentype'), url($filepath + \".woff\") format('woff'), url($filepath + \".ttf\") format('truetype'), url($filepath + \".svg#\" + $fontName + \"\") format('svg');\r\n        font-weight: normal;\r\n        font-style: normal;\r\n    }\r\n}\r\n\r\n//ESEMPIO: @include font-face('../fonts/librebaskerville-italic/', 'librebaskerville-italic-webfont', 'librebaskerville-italic');","/* http://meyerweb.com/eric/tools/css/reset/ \r\n   v2.0 | 20110126\r\n   License: none (public domain)\r\n*/\r\n\r\nhtml,\r\nbody,\r\ndiv,\r\nspan,\r\napplet,\r\nobject,\r\niframe,\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6,\r\np,\r\nblockquote,\r\npre,\r\na,\r\nabbr,\r\nacronym,\r\naddress,\r\nbig,\r\ncite,\r\ncode,\r\ndel,\r\ndfn,\r\nem,\r\nimg,\r\nins,\r\nkbd,\r\nq,\r\ns,\r\nsamp,\r\nsmall,\r\nstrike,\r\nstrong,\r\nsub,\r\nsup,\r\ntt,\r\nvar,\r\nb,\r\nu,\r\ni,\r\ncenter,\r\ndl,\r\ndt,\r\ndd,\r\nol,\r\nul,\r\nli,\r\nfieldset,\r\nform,\r\nlabel,\r\nlegend,\r\ntable,\r\ncaption,\r\ntbody,\r\ntfoot,\r\nthead,\r\ntr,\r\nth,\r\ntd,\r\narticle,\r\naside,\r\ncanvas,\r\ndetails,\r\nembed,\r\nfigure,\r\nfigcaption,\r\nfooter,\r\nheader,\r\nhgroup,\r\nmenu,\r\nnav,\r\noutput,\r\nruby,\r\nsection,\r\nsummary,\r\ntime,\r\nmark,\r\naudio,\r\nvideo {\r\n    margin: 0;\r\n    padding: 0;\r\n    border: 0;\r\n    font-size: 100%;\r\n    font: inherit;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    vertical-align: baseline;\r\n    outline: 0;\r\n    frameborder: 0;\r\n}\r\n\r\narticle,\r\naside,\r\ndetails,\r\nfigcaption,\r\nfigure,\r\nfooter,\r\nheader,\r\nhgroup,\r\nmenu,\r\nnav,\r\nsection {\r\n    display: block;\r\n}\r\n\r\nhtml,\r\nbody {\r\n    -webkit-overflow-scrolling: touch !important;\r\n    -webkit-font-smoothing: antialiased;\r\n    height: 100%;\r\n}\r\n\r\nhtml {\r\n    overflow: auto;\r\n    width: 100%;\r\n}\r\n\r\nbody {\r\n    line-height: 1;\r\n}\r\n\r\nbody.noscroll {\r\n    overflow: hidden;\r\n}\r\n\r\n*,\r\n*:before,\r\n*:after {\r\n    -webkit-box-sizing: border-box;\r\n    -moz-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n}\r\n\r\n.cf:before,\r\n.cf:after {\r\n    content: \"\";\r\n    display: table;\r\n}\r\n\r\n.cf:after {\r\n    clear: both;\r\n}\r\n\r\n.cf {\r\n    zoom: 1;\r\n}\r\n\r\nol,\r\nul {\r\n    list-style: none;\r\n}\r\n\r\nblockquote,\r\nq {\r\n    quotes: none;\r\n}\r\n\r\nblockquote {\r\n    &:before,\r\n    &:after {\r\n        content: '';\r\n        content: none;\r\n    }\r\n}\r\n\r\nq {\r\n    &:before,\r\n    &:after {\r\n        content: '';\r\n        content: none;\r\n    }\r\n}\r\n\r\ntable {\r\n    border-collapse: collapse;\r\n    border-spacing: 0;\r\n}\r\n\r\na {\r\n    text-decoration: none;\r\n    color: inherit;\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n}\r\n\r\na:active,\r\na:hover,\r\na:focus {\r\n    outline: 0;\r\n    text-decoration: none;\r\n    color: inherit;\r\n}\r\n\r\nbutton {\r\n    background: none;\r\n    border: none;\r\n    outline: none;\r\n    cursor: pointer;\r\n}","/*======  GENERAL  ======*/\r\n#{$a-tags} {\r\n    color: inherit;\r\n    text-decoration: none;\r\n}\r\n/*:::: fonticons ::::*/\r\n// [class^=\"icon-\"]:before, [class*=\" icon-\"]:before { width: auto;}\r\n\r\n.clear { clear: both;}\r\n.right { float: right;}\r\n\r\n/* Main Content */\r\n#sidebar, #content {\r\n    float: left;\r\n}\r\n\r\n.title { margin-bottom: 10px;}","/*======  COMMONS (PLACEHOLDERS) ======*/\r\n%clearfix:after {\r\n    display:block;\r\n    clear:both;\r\n    content:'';\r\n}\r\n%block {\r\n    float: left;\r\n    display: block;\r\n}\r\n\r\n%tbl {\r\n    width: 100%;\r\n    height: auto;\r\n    display: table;\r\n}\r\n\r\n%tblCll {\r\n    display: table-cell;\r\n    vertical-align: middle;\r\n}\r\n","/*** Buttons ***/\r\n\r\n.btn {\r\n    max-width: 150px;\r\n    width: 100%;\r\n    height: auto;\r\n    padding: 10px;\r\n    &:hover {\r\n        opacity: 0.5;\r\n    }\r\n}","/*======  GRID  ======*/\r\n.table { @extend %tbl;}\r\n.cell { @extend %tblCll;}\r\n\r\n.row { @extend %clearfix; }\r\n.block{ @extend %block;}\r\n\r\n.col-50{ @include col(50%);}\r\n.col-100{ @include col(100%);}","/*======  NAV  ======*/\r\n#main-navbar {\r\n    width: 100%;\r\n    display: table;\r\n    height: auto;\r\n    background-color: mapSub($colors, nav, bg);\r\n    padding: 10px;\r\n    li {\r\n        display: table-cell;\r\n        vertical-align: middle;\r\n        padding: 5px;\r\n    }\r\n}","/*======  SIDEBAR  ======*/\r\n#sidebar {\r\n    width:20%;\r\n    height: 100%;\r\n    padding: 10px;\r\n    background-color: mapSub($colors, gen, bg);\r\n    color: mapSub($colors, gen, clr);\r\n\r\n    height: 100vh;\r\n\r\n    .title { border-bottom: 1px solid; padding: 5px 0 10px;}\r\n    .list {\r\n        margin-top: 20px;\r\n        li { font-size: 14px;}\r\n    }\r\n}\r\n\r\n","/*======  CONTENT  ======*/\r\n#content {\r\n    width: 80%;\r\n    display: block;\r\n    padding: 10px;\r\n}","/*======  FOOTER  ======*/","/*======  FORM  ======*/\r\n.box { \r\n     display: table;\r\n     border: 2px solid lighten(mapSub($colors, grayscale, third), 30%);\r\n    .body { \r\n        display:table-cell; \r\n        vertical-align: middle;\r\n        text-align: center;\r\n        \r\n        height: 300px;\r\n        background-color: mapSub($colors, grayscale, second);\r\n    }\r\n}\r\n","/*======  FORM  ======*/","/*======  TABLE  ======*/","/*======  ACCORDION  ======*/\r\n","/*======  MODAL  ======*/\r\n\r\n.modal {\r\n    display: none;\r\n    width: 100%;\r\n    height: 100%;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 7000;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.modal.open {\r\n    display: block;\r\n}\r\n\r\n.modal-box {\r\n    @include aspectRatioRWD(500px, 4,3);\r\n    color: mapSub($colors, gen, clr);\r\n    position: absolute;\r\n    [class^=\"modal-\"] {\r\n        padding: 10px;\r\n    }\r\n}\r\n\r\n.modal-content {\r\n    width: 100%;\r\n    height: 80%;\r\n    display: block;\r\n    border: 0;\r\n    background-color: mapSub($colors, gen, bgModal);\r\n}\r\n\r\n.modal-footer {\r\n    width: 100%;\r\n    height: 20%;\r\n    display: table;\r\n    background-color: mapSub($colors, gen, bgModalFooter);\r\n} \r\n\r\n"]}